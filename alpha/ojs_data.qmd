```{ojs}
//| echo: false

FA = FileAttachment

nwk = await FA("/alpha/tree.newick").text()

annotations = await FileAttachment("/alpha/annotations.json").json()

annotationsMap = Object.assign({}, ...(annotations.map(item => ({ [item.id]: { id: item.id, name: item.name, toolbox: item.toolbox, show: !!item.show } }) )))

toolbox = await FileAttachment("/toolbox/toolbox.json").json()

toolboxMap = Object.assign({}, ...(toolbox.map(item => ({ [item.id]: { id: item.id, name: item.name, description: item.description } }) )))

import { denormalized_list } from "/toolbox/index.qmd"

function virus_toolbox(_family, _virus) {

  const denormalized_sublist =
    denormalized_list.filter(row => row.virus_id == _virus && row.family == _family)
 
  return html`
    ${toolbox.filter(tool => denormalized_sublist.filter(t => t.tool_id == tool.id).length > 0 ).map(tool => 
      html`
      <h2 id="${tool.id}-section">${tool.name}</h2>
      <div class="container grid">
        <div class="g-col-2 toolbox" style="text-align:center;">
          <div id="toolbox-contents" class="tool-container">
            <a href="/toolbox/index.html#${tool.id}-section">
              <div class="tool-wrapper">
                <div class="tool-tooltip-text">${tool.name}</div>
                    <div id="${tool.id}" class="tool">
                      ${tool.icon.map( i =>
                      html`<img class="tool-icon" height="${(tool.icon.length > 1) ? 150/tool.icon.length : 100}%" src="${i}"/>`
                      )}
                    </div>
              </div>
            </a>
          </div>
        </div>
        <div class="g-col-1"></div>
        <div class="g-col-7">
          <p>${tool.description}</p>
        </div>
        <div class="g-col-1" style="text-align:center;">
        </div>
      </div>
      <div class="col-xs-12" style="height:30px;"></div>
      `
    )}
  `
}

```
